<?php

namespace App\Tests\Entity;

use App\Entity\User;
use PHPUnit\Framework\TestCase;

class UserTest extends TestCase
{

    /**
     * @var User
     */
    private User $user;

    /**
     * @return void
     */
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = new User();
    }

    /**
     * @group entity
     * @group user
     * @group user-default
     */
    public function testDefault(): void
    {
        $this->assertNull($this->user->getId());
        $this->assertIsString($this->user->getFirstName());
        $this->assertEmpty($this->user->getFirstName());
        $this->assertIsString($this->user->getLastName());
        $this->assertEmpty($this->user->getLastName());
        $this->assertIsString($this->user->getEmail());
        $this->assertEmpty($this->user->getEmail());
        $this->assertIsString($this->user->getPassword());
        $this->assertEmpty($this->user->getPassword());
        $this->assertIsString($this->user->getAddress());
        $this->assertEmpty($this->user->getAddress());
        $this->assertIsString($this->user->getPhone());
        $this->assertEmpty($this->user->getPhone());
        $this->assertIsArray($this->user->getRoles());
        $this->assertEmpty($this->user->getRoles());
    }

    /**
     * @group entity
     * @group user
     * @group user-set-firstname
     */
    public function testSetFirstName(): void
    {
        $this->user->setFirstName("John");

        $this->assertSame("John", $this->user->getFirstName());
    }

    /**
     * @group entity
     * @group user
     * @group user-set-lastname
     */
    public function testSetLastName(): void
    {
        $this->user->setLastName("Doe");

        $this->assertSame("Doe", $this->user->getLastName());
    }

    /**
     * @group entity
     * @group user
     * @group user-set-email
     */
    public function testSetEmail(): void
    {
        $this->user->setEmail("test@dev.com");

        $this->assertSame("test@dev.com", $this->user->getEmail());
    }

    /**
     * @group entity
     * @group user
     * @group user-set-address
     */
    public function testSetAddress(): void
    {
        $this->user->setAddress("1 rue de la Paix");

        $this->assertSame("1 rue de la Paix", $this->user->getAddress());
    }

    /**
     * @group entity
     * @group user
     * @group user-set-phone
     */
    public function testSetPhone(): void
    {
        $this->user->setPhone("0606060606");

        $this->assertSame("+33606060606", $this->user->getPhone());
    }

    /**
     * @group entity
     * @group user
     * @group user-set-roles
     */
    public function testSetRoles(): void
    {
        $this->user->setRoles(["ROLE_USER"]);

        $this->assertSame(["ROLE_USER"], $this->user->getRoles());
    }

    /**
     * @group entity
     * @group user
     * @group user-set-password
     */
    public function testSetPassword(): void
    {
        $this->user->setPassword("password");

        $this->assertSame("password", $this->user->getPassword());
    }

    /**
     * @group entity
     * @group user
     * @group user-get-user-identifier
     */
    public function testGetUserIdentifier(): void
    {
        $this->user->setEmail("test@dev.com");

        $this->assertSame("test@dev.com", $this->user->getUserIdentifier());
    }

    /**
     * @group entity
     * @group user
     * @group user-get-salt
     */
    public function testGetSalt(): void
    {
        $this->assertNull($this->user->getSalt());
    }

    /**
     * @group entity
     * @group user
     * @group user-erase-credentials
     */
    public function testEraseCredentials(): void
    {
        $this->assertNull($this->user->eraseCredentials());
    }
}